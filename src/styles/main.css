@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Fira+Sans:wght@300&family=PT+Serif:wght@400;700&display=swap");
:root {
  --fs-step-000: clamp(0.7406rem, 0.7263rem + 0.061vi, 0.7813rem);
  --fs-step-00: clamp(0.8331rem, 0.7964rem + 0.1568vi, 0.9375rem);
  --fs-step-0: clamp(0.9375rem, 0.8715rem + 0.2817vi, 1.125rem);
  --fs-step-1: clamp(1.055rem, 0.9511rem + 0.4432vi, 1.35rem);
  --fs-step-2: clamp(1.1863rem, 1.0335rem + 0.6516vi, 1.62rem);
  --fs-step-3: clamp(1.335rem, 1.1207rem + 0.9146vi, 1.9438rem);
  --fs-step-4: clamp(1.5019rem, 1.2094rem + 1.2479vi, 2.3325rem);
  --fs-step-5: clamp(1.6894rem, 1.2985rem + 1.6676vi, 2.7994rem);
  --fs-step-6: clamp(1.9006rem, 1.387rem + 2.1915vi, 3.3594rem);
  --fs-step-7: clamp(2.1381rem, 1.4715rem + 2.8441vi, 4.0313rem);
  --fs-step-8: clamp(2.4056rem, 1.5493rem + 3.6535vi, 4.8375rem);
  --fs-step-9: clamp(2.7062rem, 1.6151rem + 4.6554vi, 5.805rem);
  --fs-step-10: clamp(3.0313rem, 1.6459rem + 5.9108vi, 6.9656rem);
  --fs-step-11: clamp(3.7887rem, 1.4439rem + 10.0047vi, 10.4481rem);
  --fs-step-12: clamp(3.7887rem, 0.0612rem + 15.9042vi, 14.375rem);
}

/* Themne */
/* Layout Tokens */
/* Box sizing rules */
*,
*::after,
*::before {
  box-sizing: border-box;
}

/* Prevent font size inflation */
:where(html) {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

:where(html) {
  scrollbar-gutter: stable;
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role=list],
ol[role=list] {
  list-style: none;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}

/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
  text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
  color: currentColor;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

.transaction-list {
  margin-top: 2rem;
}
.transaction-list ul {
  list-style: none;
  padding: 0;
}
.transaction-list .transaction-item {
  display: flex;
  justify-content: space-between;
  padding: 0.75rem;
  border-bottom: 1px solid #eee;
}
.transaction-list .transaction-item .amount.negative {
  color: #e53935;
}
.transaction-list .transaction-item .amount.positive {
  color: #43a047;
}

:is(h1, h2, h3, h4) {
  line-height: var(--leading-fine);
  text-wrap: balance;
}

:is(h4, h5, h6) {
  font-size: var(--size-step-3);
}

p,
li {
  overflow-wrap: break-word;
  hyphens: auto;
}

/*
CLUSTER
More info: https://every-layout.dev/layouts/cluster/
A layout that lets you distribute items with consitent
spacing, regardless of their size

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-m)): This defines the space
between each item.

--cluster-horizontal-alignment (flex-start): How items should align
horizontally. Can be any acceptable flexbox aligmnent value.

--cluster-vertical-alignment (center): How items should align vertically.
Can be any acceptable flexbox alignment value.
*/
.cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, var(--space-m));
  justify-content: var(--cluster-horizontal-alignment, flex-start);
  align-items: var(--cluster-vertical-alignment, center);
}

.flow,
.flow-large > * {
  margin-block: 0;
}

.flow-inline > * + * {
  margin-inline-start: var(--space, 1rem);
}

.flow > * + * {
  margin-block-start: var(--space, 1rem);
}

.flow-large > * + * {
  margin-block-start: var(--space, 2rem);
}

:is(h1, h2, h3, blockquote) {
  --flow-space: 1.5em;
}

:is(h1, h2, h3) + * {
  --flow-space: 0.5em;
}

/* --- Grid System Configuration -------------------------------------- */
/* Derived once (Sass math, not runtime calc) */
/* --- Utilities ------------------------------------------------------- */
.gap-0 {
  --gutter: 0;
}

.gap-2 {
  --gutter: 0.5rem;
}

.gap-4 {
  --gutter: 1rem;
}

.gap-6 {
  --gutter: 1.5rem;
}

.grid--fill {
  --grid-placement: auto-fill;
}

.grid--fit {
  --grid-placement: auto-fit;
}

.grid__span-2 {
  grid-column: span 2;
}

.grid__row-2 {
  grid-row: span 2;
}

.grid__span-3 {
  grid-column: span 3;
}

.grid__row-3 {
  grid-row: span 3;
}

.grid__span-4 {
  grid-column: span 4;
}

.grid__row-4 {
  grid-row: span 4;
}

.grid__span-5 {
  grid-column: span 5;
}

.grid__row-5 {
  grid-row: span 5;
}

.grid__span-6 {
  grid-column: span 6;
}

.grid__row-6 {
  grid-row: span 6;
}

.grid__span-7 {
  grid-column: span 7;
}

.grid__row-7 {
  grid-row: span 7;
}

.grid__span-8 {
  grid-column: span 8;
}

.grid__row-8 {
  grid-row: span 8;
}

.grid__span-9 {
  grid-column: span 9;
}

.grid__row-9 {
  grid-row: span 9;
}

.grid__span-10 {
  grid-column: span 10;
}

.grid__row-10 {
  grid-row: span 10;
}

.grid__span-11 {
  grid-column: span 11;
}

.grid__row-11 {
  grid-row: span 11;
}

.grid__span-12 {
  grid-column: span 12;
}

.grid__row-12 {
  grid-row: span 12;
}

/* --- Mixins ---------------------------------------------------------- */
/* --- Auto Grid (Every Layout style) --------------------------------- */
:where(.grid) {
  display: grid;
  grid-template-columns: repeat(var(--grid-placement, auto-fit), minmax(var(--grid-min-item-size, 16rem), 1fr));
  gap: var(--gutter, 1rem);
  grid-auto-rows: minmax(min-content, auto);
}
:where(.grid)[data-cols], :where(.grid)[data-layout] {
  --grid-placement: auto-fit;
}

.grid[data-cols="1"] {
  --grid-min-item-size: 100%;
}
.grid[data-cols="2"] {
  --grid-min-item-size: max(16rem, calc((100% - (var(--gutter, 1rem) * 1)) / 2));
}
.grid[data-cols="3"] {
  --grid-min-item-size: max(15rem, calc((100% - (var(--gutter, 1rem) * 2)) / 3));
}
.grid[data-cols="4"] {
  --grid-min-item-size: max(14rem, calc((100% - (var(--gutter, 1rem) * 3)) / 4));
}
.grid[data-cols="5"] {
  --grid-min-item-size: max(13rem, calc((100% - (var(--gutter, 1rem) * 4)) / 5));
}
.grid[data-cols="6"] {
  --grid-min-item-size: max(12rem, calc((100% - (var(--gutter, 1rem) * 5)) / 6));
}
.grid[data-cols="7"] {
  --grid-min-item-size: max(11rem, calc((100% - (var(--gutter, 1rem) * 6)) / 7));
}
.grid[data-cols="8"] {
  --grid-min-item-size: max(10rem, calc((100% - (var(--gutter, 1rem) * 7)) / 8));
}
.grid[data-cols="9"] {
  --grid-min-item-size: max(9rem, calc((100% - (var(--gutter, 1rem) * 8)) / 9));
}
.grid[data-cols="10"] {
  --grid-min-item-size: max(8rem, calc((100% - (var(--gutter, 1rem) * 9)) / 10));
}
.grid[data-cols="11"] {
  --grid-min-item-size: max(7rem, calc((100% - (var(--gutter, 1rem) * 10)) / 11));
}
.grid[data-cols="12"] {
  --grid-min-item-size: max(6rem, calc((100% - (var(--gutter, 1rem) * 11)) / 12));
}
.grid--dense {
  grid-auto-flow: dense;
}
.grid__span-2 {
  grid-column: span 2;
}
.grid__row-2 {
  grid-row: span 2;
}

.grid-container {
  container-type: inline-size;
}
@container (max-width: 50rem) {
  .grid-container .grid {
    --grid-min-item-size: 14rem;
  }
}
@container (max-width: 30rem) {
  .grid-container .grid [class*=grid__span-] {
    grid-column: span 1;
  }
}

/* --- Sidebar Grid ---------------------------------------------------- */
.sidebar-grid {
  display: grid;
  gap: var(--gutter, 1rem);
  grid-template-columns: minmax(16rem, 3fr) minmax(12rem, 1fr);
}

.sidebar-grid__container {
  container-type: inline-size;
}
@container (max-width: 48rem) {
  .sidebar-grid__container .sidebar-grid {
    grid-template-columns: 1fr;
  }
}

/* --- Flexbox Grid ---------------------------------------------------- */
.flex-grid {
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  gap: var(--gutter, 1rem);
}
.flex-grid > * {
  flex-grow: 1;
  min-inline-size: 0;
}
.flex-grid[data-cols="1"] > * {
  flex-basis: 100%;
  min-width: 100%;
}
.flex-grid[data-cols="2"] > * {
  flex-basis: calc((100% - var(--gutter, 1rem) * 1) / 2);
  min-width: 16rem;
}
.flex-grid[data-cols="3"] > * {
  flex-basis: calc((100% - var(--gutter, 1rem) * 2) / 3);
  min-width: 15rem;
}
.flex-grid[data-cols="4"] > * {
  flex-basis: calc((100% - var(--gutter, 1rem) * 3) / 4);
  min-width: 14rem;
}
.flex-grid[data-cols="5"] > * {
  flex-basis: calc((100% - var(--gutter, 1rem) * 4) / 5);
  min-width: 13rem;
}
.flex-grid[data-cols="6"] > * {
  flex-basis: calc((100% - var(--gutter, 1rem) * 5) / 6);
  min-width: 12rem;
}
.flex-grid[data-cols="7"] > * {
  flex-basis: calc((100% - var(--gutter, 1rem) * 6) / 7);
  min-width: 11rem;
}
.flex-grid[data-cols="8"] > * {
  flex-basis: calc((100% - var(--gutter, 1rem) * 7) / 8);
  min-width: 10rem;
}
.flex-grid[data-cols="9"] > * {
  flex-basis: calc((100% - var(--gutter, 1rem) * 8) / 9);
  min-width: 9rem;
}
.flex-grid[data-cols="10"] > * {
  flex-basis: calc((100% - var(--gutter, 1rem) * 9) / 10);
  min-width: 8rem;
}
.flex-grid[data-cols="11"] > * {
  flex-basis: calc((100% - var(--gutter, 1rem) * 10) / 11);
  min-width: 7rem;
}
.flex-grid[data-cols="12"] > * {
  flex-basis: calc((100% - var(--gutter, 1rem) * 11) / 12);
  min-width: 6rem;
}
.flex-grid.flex-grid--playground > * {
  min-width: var(--min-width, 16rem);
  flex-basis: var(--flex-basis, 30%);
}

/* --- Masonry Grid ---------------------------------------------------- */
.masonry-grid {
  column-count: var(--masonry-cols, 3);
  column-gap: var(--gutter, 1rem);
}
.masonry-grid > * {
  break-inside: avoid;
  margin-bottom: var(--gutter, 1rem);
}

.masonry__container {
  container-type: inline-size;
}
@container (max-width: 40rem) {
  .masonry__container .masonry-grid {
    --masonry-cols: 1;
  }
}
@container (40rem <= width <= 70rem) {
  .masonry__container .masonry-grid {
    --masonry-cols: 2;
  }
}
@container (min-width: 70rem) {
  .masonry__container .masonry-grid {
    --masonry-cols: 3;
  }
}

/*
REPEL
A little layout that pushes items away from each other where
there is space in the viewport and stacks on small viewports

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-m)): This defines the space
between each item.

--repel-vertical-alignment (center): How items should align vertically.
Can be any acceptable flexbox alignment value.
*/
.repel {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: var(--repel-vertical-alignment, center);
  gap: var(--gutter, var(--space-m));
}

.repel[data-nowrap] {
  flex-wrap: nowrap;
}

/* 
SIDEBAR
More info: https://every-layout.dev/layouts/sidebar/
A layout that allows you to have a flexible main content area
and a "fixed" width sidebar that sits on the left or right.
If there is not enough viewport space to fit both the sidebar
width *and* the main content minimum width, they will stack
on top of each other

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-size-1)): This defines the space
between the sidebar and main content.

--sidebar-target-width (20rem): How large the sidebar should be

--sidebar-content-min-width(50%): The minimum size of the main content area

EXCEPTIONS
.sidebar[data-direction='rtl']: flips the sidebar to be on the right 
*/
.sidebar {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, var(--space-s-l));
}

.sidebar:not([data-direction]) > :first-child {
  flex-basis: var(--sidebar-target-width, 20rem);
  flex-grow: 1;
}

.sidebar:not([data-direction]) > :last-child {
  flex-basis: 0;
  flex-grow: 999;
  min-width: var(--sidebar-content-min-width, 50%);
}

.sidebar[data-reversed] {
  flex-direction: row-reverse;
}

.sidebar[data-direction=rtl] > :last-child {
  flex-basis: var(--sidebar-target-width, 20rem);
  flex-grow: 1;
}

.sidebar[data-direction=rtl] > :first-child {
  flex-basis: 0;
  flex-grow: 999;
  min-width: var(--sidebar-content-min-width, 50%);
}

/*
SWITCHER
More info: https://every-layout.dev/layouts/switcher/
A layout that allows you to lay **2** items next to each other
until there is not enough horizontal space to allow that.

CUSTOM PROPERTIES AND CONFIGURATION
--gutter (var(--space-size-1)): This defines the space
between each item

--switcher-target-container-width (40rem): How large the container
needs to be to allow items to sit inline with each other

--switcher-vertical-alignment (flex-start): How items should align vertically.
Can be any acceptable flexbox alignment value.
*/
.switcher {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, var(--space-l));
  align-items: var(--switcher-vertical-alignment, flex-start);
}

.switcher > * {
  flex-grow: 1;
  flex-basis: calc((var(--switcher-target-container-width, 40rem) - 100%) * 999);
}

/* Max 2 items,
so anything greater than 2 is ful width */
.switcher > :nth-child(n+3) {
  flex-basis: 100%;
}

.container {
  --padding: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem) * 2;
  --max-width: 65rem;
  width: min(100% - var(--padding), var(--max-width));
  margin-inline: auto;
  padding-inline: 1em;
}

.container[data-type=narrow] {
  --max-width: 45rem;
}

.container[data-type=wide] {
  --max-width: 100rem;
}

.container[data-type=full-bleed] {
  --max-width: 100%;
}

.container[data-type=full-bleed-split-screen] {
  --max-width: 100%;
  --padding: 0;
}
@media screen and (min-width: 65em) {
  .container[data-type=full-bleed-split-screen] {
    display: grid;
    grid-template-columns: minmax(0, 50%) 1fr;
    margin-inline: 0;
    padding-inline: 1em 0;
  }
}

.margin-8 {
  margin: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}
.margin-block-start-8 {
  margin-block-start: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}
.margin-block-end-8 {
  margin-block-end: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}
.margin-block-8 {
  margin-block: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}
.margin-inline-start-8 {
  margin-inline-start: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}
.margin-inline-end-8 {
  margin-inline-end: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}
.margin-inline-8 {
  margin-inline: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}

.padding-8 {
  padding: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}
.padding-block-start-8 {
  padding-block-start: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}
.padding-block-end-8 {
  padding-block-end: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}
.padding-block-8 {
  padding-block: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}
.padding-inline-start-8 {
  padding-inline-start: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}
.padding-inline-end-8 {
  padding-inline-end: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}
.padding-inline-8 {
  padding-inline: clamp(0.5rem, 0.46rem + 0.22vw, 0.63rem);
}

.margin-12 {
  margin: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}
.margin-block-start-12 {
  margin-block-start: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}
.margin-block-end-12 {
  margin-block-end: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}
.margin-block-12 {
  margin-block: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}
.margin-inline-start-12 {
  margin-inline-start: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}
.margin-inline-end-12 {
  margin-inline-end: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}
.margin-inline-12 {
  margin-inline: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}

.padding-12 {
  padding: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}
.padding-block-start-12 {
  padding-block-start: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}
.padding-block-end-12 {
  padding-block-end: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}
.padding-block-12 {
  padding-block: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}
.padding-inline-start-12 {
  padding-inline-start: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}
.padding-inline-end-12 {
  padding-inline-end: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}
.padding-inline-12 {
  padding-inline: clamp(0.75rem, 0.68rem + 0.33vw, 0.94rem);
}

.margin-16 {
  margin: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}
.margin-block-start-16 {
  margin-block-start: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}
.margin-block-end-16 {
  margin-block-end: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}
.margin-block-16 {
  margin-block: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}
.margin-inline-start-16 {
  margin-inline-start: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}
.margin-inline-end-16 {
  margin-inline-end: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}
.margin-inline-16 {
  margin-inline: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}

.padding-16 {
  padding: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}
.padding-block-start-16 {
  padding-block-start: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}
.padding-block-end-16 {
  padding-block-end: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}
.padding-block-16 {
  padding-block: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}
.padding-inline-start-16 {
  padding-inline-start: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}
.padding-inline-end-16 {
  padding-inline-end: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}
.padding-inline-16 {
  padding-inline: clamp(1rem, 0.91rem + 0.43vw, 1.25rem);
}

.margin-24 {
  margin: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}
.margin-block-start-24 {
  margin-block-start: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}
.margin-block-end-24 {
  margin-block-end: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}
.margin-block-24 {
  margin-block: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}
.margin-inline-start-24 {
  margin-inline-start: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}
.margin-inline-end-24 {
  margin-inline-end: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}
.margin-inline-24 {
  margin-inline: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}

.padding-24 {
  padding: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}
.padding-block-start-24 {
  padding-block-start: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}
.padding-block-end-24 {
  padding-block-end: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}
.padding-block-24 {
  padding-block: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}
.padding-inline-start-24 {
  padding-inline-start: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}
.padding-inline-end-24 {
  padding-inline-end: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}
.padding-inline-24 {
  padding-inline: clamp(1.5rem, 1.37rem + 0.65vw, 1.88rem);
}

.margin-32 {
  margin: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}
.margin-block-start-32 {
  margin-block-start: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}
.margin-block-end-32 {
  margin-block-end: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}
.margin-block-32 {
  margin-block: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}
.margin-inline-start-32 {
  margin-inline-start: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}
.margin-inline-end-32 {
  margin-inline-end: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}
.margin-inline-32 {
  margin-inline: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}

.padding-32 {
  padding: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}
.padding-block-start-32 {
  padding-block-start: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}
.padding-block-end-32 {
  padding-block-end: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}
.padding-block-32 {
  padding-block: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}
.padding-inline-start-32 {
  padding-inline-start: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}
.padding-inline-end-32 {
  padding-inline-end: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}
.padding-inline-32 {
  padding-inline: clamp(2rem, 1.83rem + 0.87vw, 2.5rem);
}

.margin-48 {
  margin: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}
.margin-block-start-48 {
  margin-block-start: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}
.margin-block-end-48 {
  margin-block-end: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}
.margin-block-48 {
  margin-block: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}
.margin-inline-start-48 {
  margin-inline-start: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}
.margin-inline-end-48 {
  margin-inline-end: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}
.margin-inline-48 {
  margin-inline: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}

.padding-48 {
  padding: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}
.padding-block-start-48 {
  padding-block-start: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}
.padding-block-end-48 {
  padding-block-end: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}
.padding-block-48 {
  padding-block: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}
.padding-inline-start-48 {
  padding-inline-start: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}
.padding-inline-end-48 {
  padding-inline-end: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}
.padding-inline-48 {
  padding-inline: clamp(3rem, 2.74rem + 1.3vw, 3.75rem);
}

.margin-64 {
  margin: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}
.margin-block-start-64 {
  margin-block-start: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}
.margin-block-end-64 {
  margin-block-end: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}
.margin-block-64 {
  margin-block: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}
.margin-inline-start-64 {
  margin-inline-start: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}
.margin-inline-end-64 {
  margin-inline-end: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}
.margin-inline-64 {
  margin-inline: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}

.padding-64 {
  padding: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}
.padding-block-start-64 {
  padding-block-start: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}
.padding-block-end-64 {
  padding-block-end: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}
.padding-block-64 {
  padding-block: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}
.padding-inline-start-64 {
  padding-inline-start: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}
.padding-inline-end-64 {
  padding-inline-end: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}
.padding-inline-64 {
  padding-inline: clamp(4rem, 3.65rem + 1.74vw, 5rem);
}

.margin-96 {
  margin: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}
.margin-block-start-96 {
  margin-block-start: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}
.margin-block-end-96 {
  margin-block-end: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}
.margin-block-96 {
  margin-block: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}
.margin-inline-start-96 {
  margin-inline-start: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}
.margin-inline-end-96 {
  margin-inline-end: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}
.margin-inline-96 {
  margin-inline: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}

.padding-96 {
  padding: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}
.padding-block-start-96 {
  padding-block-start: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}
.padding-block-end-96 {
  padding-block-end: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}
.padding-block-96 {
  padding-block: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}
.padding-inline-start-96 {
  padding-inline-start: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}
.padding-inline-end-96 {
  padding-inline-end: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}
.padding-inline-96 {
  padding-inline: clamp(6rem, 5.48rem + 2.61vw, 7.5rem);
}

/* Flat utilities: .fs-step-0, .fs-step-1, … */
.fs-step-000 {
  font-size: var(--fs-step-000);
}

.fs-step-00 {
  font-size: var(--fs-step-00);
}

.fs-step-0 {
  font-size: var(--fs-step-0);
}

.fs-step-1 {
  font-size: var(--fs-step-1);
}

.fs-step-2 {
  font-size: var(--fs-step-2);
}

.fs-step-3 {
  font-size: var(--fs-step-3);
}

.fs-step-4 {
  font-size: var(--fs-step-4);
}

.fs-step-5 {
  font-size: var(--fs-step-5);
}

.fs-step-6 {
  font-size: var(--fs-step-6);
}

.fs-step-7 {
  font-size: var(--fs-step-7);
}

.fs-step-8 {
  font-size: var(--fs-step-8);
}

.fs-step-9 {
  font-size: var(--fs-step-9);
}

.fs-step-10 {
  font-size: var(--fs-step-10);
}

.fs-step-11 {
  font-size: var(--fs-step-11);
}

.fs-step-12 {
  font-size: var(--fs-step-12);
}

/* Optional responsive: .sm:fs-step-2, .md:fs-step-4, … */
@media (min-width: 40rem) {
  .sm\:fs-step-000 {
    font-size: var(--fs-step-000);
  }
  .sm\:fs-step-00 {
    font-size: var(--fs-step-00);
  }
  .sm\:fs-step-0 {
    font-size: var(--fs-step-0);
  }
  .sm\:fs-step-1 {
    font-size: var(--fs-step-1);
  }
  .sm\:fs-step-2 {
    font-size: var(--fs-step-2);
  }
  .sm\:fs-step-3 {
    font-size: var(--fs-step-3);
  }
  .sm\:fs-step-4 {
    font-size: var(--fs-step-4);
  }
  .sm\:fs-step-5 {
    font-size: var(--fs-step-5);
  }
  .sm\:fs-step-6 {
    font-size: var(--fs-step-6);
  }
  .sm\:fs-step-7 {
    font-size: var(--fs-step-7);
  }
  .sm\:fs-step-8 {
    font-size: var(--fs-step-8);
  }
  .sm\:fs-step-9 {
    font-size: var(--fs-step-9);
  }
  .sm\:fs-step-10 {
    font-size: var(--fs-step-10);
  }
  .sm\:fs-step-11 {
    font-size: var(--fs-step-11);
  }
  .sm\:fs-step-12 {
    font-size: var(--fs-step-12);
  }
}
@media (min-width: 64rem) {
  .md\:fs-step-000 {
    font-size: var(--fs-step-000);
  }
  .md\:fs-step-00 {
    font-size: var(--fs-step-00);
  }
  .md\:fs-step-0 {
    font-size: var(--fs-step-0);
  }
  .md\:fs-step-1 {
    font-size: var(--fs-step-1);
  }
  .md\:fs-step-2 {
    font-size: var(--fs-step-2);
  }
  .md\:fs-step-3 {
    font-size: var(--fs-step-3);
  }
  .md\:fs-step-4 {
    font-size: var(--fs-step-4);
  }
  .md\:fs-step-5 {
    font-size: var(--fs-step-5);
  }
  .md\:fs-step-6 {
    font-size: var(--fs-step-6);
  }
  .md\:fs-step-7 {
    font-size: var(--fs-step-7);
  }
  .md\:fs-step-8 {
    font-size: var(--fs-step-8);
  }
  .md\:fs-step-9 {
    font-size: var(--fs-step-9);
  }
  .md\:fs-step-10 {
    font-size: var(--fs-step-10);
  }
  .md\:fs-step-11 {
    font-size: var(--fs-step-11);
  }
  .md\:fs-step-12 {
    font-size: var(--fs-step-12);
  }
}
@media (min-width: 80rem) {
  .lg\:fs-step-000 {
    font-size: var(--fs-step-000);
  }
  .lg\:fs-step-00 {
    font-size: var(--fs-step-00);
  }
  .lg\:fs-step-0 {
    font-size: var(--fs-step-0);
  }
  .lg\:fs-step-1 {
    font-size: var(--fs-step-1);
  }
  .lg\:fs-step-2 {
    font-size: var(--fs-step-2);
  }
  .lg\:fs-step-3 {
    font-size: var(--fs-step-3);
  }
  .lg\:fs-step-4 {
    font-size: var(--fs-step-4);
  }
  .lg\:fs-step-5 {
    font-size: var(--fs-step-5);
  }
  .lg\:fs-step-6 {
    font-size: var(--fs-step-6);
  }
  .lg\:fs-step-7 {
    font-size: var(--fs-step-7);
  }
  .lg\:fs-step-8 {
    font-size: var(--fs-step-8);
  }
  .lg\:fs-step-9 {
    font-size: var(--fs-step-9);
  }
  .lg\:fs-step-10 {
    font-size: var(--fs-step-10);
  }
  .lg\:fs-step-11 {
    font-size: var(--fs-step-11);
  }
  .lg\:fs-step-12 {
    font-size: var(--fs-step-12);
  }
}

/*# sourceMappingURL=main.css.map */
