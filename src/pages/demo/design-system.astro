<!doctype html>
<html lang='en'>
	<head>
		<meta charset='utf-8' />
		<meta name='viewport' content='width=device-width, initial-scale=1' />
		<title>Design System Demo</title>

		<link rel='preconnect' href='https://fonts.googleapis.com' />
		<link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
		<link
			href='https://fonts.googleapis.com/css2?family=Fira+Sans:wght@300&family=PT+Serif:wght@400;700&display=swap'
			rel='stylesheet'
		/>

		<link rel='stylesheet' href='/src/styles/main.css' />
		<link rel='stylesheet' href='/src/styles/grid-demo.css' />
	</head>
	<body>
		<div class='wrap'>
			<header>
				<h1>Design System</h1>
				<p class='lead'>
					A live demonstration of the core design tokens and components for this application.
				</p>
			</header>

			<main class='flow-large'>
				<!-- Typography -->
				<section class='flow-large'>
					<header>
						<h2 class='section-title'>Typography &amp; Font Scaling</h2>
						<p>
							The following text samples demonstrate the fluid typography system. Font sizes scale
							automatically based on viewport width, using CSS <code>clamp()</code>.
						</p>
					</header>

					<div class='card flow-large'>
						<div style='font-family: var(--ff-pt-serif)'>
							<h3 class='fs-step-5' style='font-weight: 700'>Display Heading (PT Serif, Bold)</h3>
							<p class='fs-step-0'>
								Used for major page titles and impactful statements. Class:
								<code>.fs-step-5</code>
							</p>
						</div>

						<div style='font-family: var(--ff-fira-sans)'>
							<h4 class='fs-step-3' style='font-weight: 300'>Section Heading (Fira Sans, Light)</h4>
							<p class='fs-step-0'>
								Used for section titles like the ones on this page. Class:
								<code>.fs-step-3</code>
							</p>
						</div>

						<div style='font-family: var(--ff-fira-sans)'>
							<p class='fs-step-1'>
								<strong>Lead Paragraph (Fira Sans, Step 1):</strong> This is for introductory paragraphs
								that need a bit more emphasis than standard body text. It provides a gentle entry point
								into a section of content.
							</p>
						</div>

						<div>
							<p class='fs-step-0'>
								<strong>Body Text (Fira Sans, Step 0):</strong> This is the default size for all standard
								text content. It's designed for maximum readability for long-form reading. The quick
								brown fox jumps over the lazy dog.
							</p>
						</div>

						<div>
							<p class='fs-step-00'>
								<small>
									<strong>Small/Muted Text (Fira Sans, Step -1):</strong> Used for captions, hints, and
									other secondary information that shouldn't compete with the main content.
								</small>
							</p>
						</div>
					</div>
				</section>

				<!-- Colors -->
				<section class='flow-large'>
					<header>
						<h2 class='section-title'>Color Palette</h2>
						<p>
							Core color tokens for light and dark themes. These are defined as CSS custom
							properties.
						</p>
					</header>

					<section class='grid-container'>
						<!-- Use grid with auto-fit via class and explicit min size -->
						<div class='grid grid--fit gap-4' style='--grid-min-item-size: 10rem'>
							<div class='card'>
								<div
									style='width: 100%; height: 4rem; background: var(--bg); border: 1px solid var(--text);'
								>
								</div>
								<code>--bg</code>
							</div>
							<div class='card'>
								<div style='width: 100%; height: 4rem; background: var(--panel);'></div>
								<code>--panel</code>
							</div>
							<div class='card'>
								<div style='width: 100%; height: 4rem; background: var(--text);'></div>
								<code>--text</code>
							</div>
							<div class='card'>
								<div style='width: 100%; height: 4rem; background: var(--brand);'></div>
								<code>--brand</code>
							</div>
						</div>
					</section>
				</section>

				<!-- Spacing -->
				<section class='flow-large'>
					<h2 class='section-title'>Spacing</h2>
					<p>
						Spacing is managed via CSS custom properties (e.g., <code>--space-m</code>). These
						tokens are used for margins, padding, and gaps to ensure consistent rhythm.
					</p>

					<section class='grid-container'>
						<div class='grid grid--fit gap-4' style='--grid-min-item-size: 10rem'>
							<div class='card'>
								<div style='width:100%;height:var(--space-2xs);background:var(--brand);'></div>
								<code>--space-2xs</code> (0.25rem)
							</div>
							<div class='card'>
								<div style='width:100%;height:var(--space-xs);background:var(--brand);'></div>
								<code>--space-xs</code> (0.5rem)
							</div>
							<div class='card'>
								<div style='width:100%;height:var(--space-s);background:var(--brand);'></div>
								<code>--space-s</code> (0.75rem)
							</div>
							<div class='card'>
								<div style='width:100%;height:var(--space-m);background:var(--brand);'></div>
								<code>--space-m</code> (1rem)
							</div>
							<div class='card'>
								<div style='width:100%;height:var(--space-l);background:var(--brand);'></div>
								<code>--space-l</code> (1.5rem)
							</div>
							<div class='card'>
								<div style='width:100%;height:var(--space-xl);background:var(--brand);'></div>
								<code>--space-xl</code> (2rem)
							</div>
						</div>
					</section>
				</section>

				<!-- Grid System -->
				<section class='flow-large'>
					<h2 class='section-title'>Grid System</h2>
					<p>
						The auto-grid system uses CSS Grid with <code>auto-fit</code> or fixed column presets to
						create responsive layouts without media queries.
					</p>

					<div class='flow-large'>
						<h4>Column Count Presets</h4>
						<p>
							Use <code>data-cols</code> for quick, breakpoint-free columns that adapt to space.
						</p>

						<section class='grid-container'>
							<div class='grid gap-4' data-cols='4'>
								<div class='card'>4-col</div>
								<div class='card'>item</div>
								<div class='card'>item</div>
								<div class='card'>item</div>
							</div>
						</section>

						<h4>Auto-fit Grid</h4>
						<p>
							This grid uses <code>auto-fit</code> with a minimum item size of <code>12rem</code>.
							Items wrap and grow to fill available space.
						</p>

						<section class='grid-container'>
							<div class='grid grid--fit gap-4' style='--grid-min-item-size: 12rem'>
								<div class='card'>Item A</div>
								<div class='card'>Item B</div>
								<div class='card'>Item C</div>
								<div class='card'>Item D</div>
								<div class='card'>Item E</div>
							</div>
						</section>

						<h4>Dense Packing &amp; Spans</h4>
						<p>
							Use <code>.grid--dense</code> and item spans (e.g., <code>.grid__span-2</code>) to
							create masonry-style layouts that fill empty gaps.
						</p>

						<section class='grid-container'>
							<div class='grid grid--dense gap-4' data-cols='4'>
								<article class='card grid__span-2'>
									<h3>Wide Item</h3>
									<p>Spans 2 columns.</p>
								</article>
								<article class='card'><h3>Normal</h3></article>
								<article class='card grid__row-2'>
									<h3>Tall Item</h3>
									<p>Spans 2 rows.</p>
								</article>
								<article class='card'><h3>Normal</h3></article>
								<article class='card'><h3>Normal</h3></article>
							</div>
						</section>

						<h4>Sidebar Layout</h4>
						<p>
							An explicit two-column grid for main content and a sidebar that gracefully stacks on
							smaller screens.
						</p>

						<section class='sidebar-grid__container'>
							<div class='sidebar-grid gap-6'>
								<article class='card'>
									<h3>Main Content Area</h3>
									<p>This area is wider and flexible.</p>
								</article>
								<aside class='card'>
									<h3>Sidebar</h3>
									<p>This area has a fixed base width.</p>
								</aside>
							</div>
						</section>
					</div>
				</section>
			</main>
		</div>
	</body>
</html>
